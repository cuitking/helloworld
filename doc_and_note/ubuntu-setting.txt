---------------2016-03-22------------------

SSH分客户端openssh-client和openssh-server
如果你只是想登陆别的机器的SSH只需要安装openssh-client（ubuntu有默认安装，如果没有则sudo apt-get install openssh-client），如果要使本机开放SSH服务就需要安装openssh-server
sudo apt-get install openssh-server
然后确认sshserver是否启动了：
ps -e |grep ssh
如果看到sshd那说明ssh-server已经启动了。
如果没有则可以这样启动：sudo /etc/init.d/ssh start
ssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。
然后重启SSH服务：
sudo /etc/init.d/ssh stop
sudo /etc/init.d/ssh start

然后使用以下方式登陆SSH：
ssh username@192.168.1.112 username为192.168.1.112 机器上的用户，需要输入密码。
断开连接：exit

-------------------------配置eclipse for c++ in linux ubuntu 14.04--------------------------------------

下载jdk，eclipse
在.bashrc中加入
export JAVA_HOME=/usr/local/jdk1.8.0_73
export PATH=$JAVA_HOME/bin:$PATH
export PATH=/usr/local/eclipse:$PATH

alias eclipse='nohup eclipse >/dev/null &'
------------------------------secureCRT  linux 传输文件--------------------------

1.安装 lrzsz  ubuntu : sudo apt-get install lrzsz  centos: yum install lrzsz

2.输入 rz 上传文件
3.输入 sz 使用sz命令。sz加上文件完整路径 下载到secureCRT设置的默认目录

secureCRT设置 session -> properties ->X/Y/Z modem

----------------windows TortoiseGit 的ppk 文件转换成 openssh文件(ubuntu 14.04) ----------------------------------

1. 安装puttygen : sudo apt-get install putty-tools
2. ppk 文件转化 openssh key 
	private key:
	puttygen kk2_git.ppk -0 private-openssh -o id_rsa
	public key:
	puttygen kk2_git.ppk -O public-openssh -o id_rsa.pub
	

------------------------ubuntu 安装scons---------------------------

scons安装和使用

1. scons是神马？
 
scons是linux下的自动构建工具，类似cmake。
 
2. 安装
 
wget http://prdownloads.sourceforge.net/scons/scons-2.2.0.tar.gz .
 
tar zxvf scons-2.2.0.tar.gz
 
cd scons-2.2.0
 
python setup.py install
 
正常情况下，scons将安装到${PYTHON_INSTALL_DIR}/bin/下
 
3. hello world程序
 
三个文件hello.h hello.c main.c hello.h定义函数void hello(); hello.c中实现该函数，main.c中调用该函数。
 
编写SConstruct，scons构建时使用。内容如下：
 
Program('hello', ['hello.c', 'main.c'])
 
开始构建 
 
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
gcc -o hello.o -c hello.c
gcc -o main.o -c main.c
gcc -o hello hello.o main.o
scons: done building targets.

---------------------------ubuntu 安装protobuf----------------------------------
http://blog.csdn.net/xocoder/article/details/9155901
ImportError: No module named google.protobuf.internal 解决办法
http://blog.csdn.net/woainiwss/article/details/50585665
./configure CXXFLAGS=-fPIC   64位


--------------------------vs code 配置c++开发环境 ubuntu------------------------------
https://www.zhihu.com/question/30037013

-------------------------------



linux系统下怎么安装.deb文件？

deb 是 ubuntu 、debian 的格式。
rpm 是 redhat 、fedora 、suse 的格式。

他们不通用（虽然可以转换一下）。

deb是debian发行版的软件包
ubuntu是基于debian 发行的 所有可以用

.deb是solaris系统下的安装包后缀名。安装方法如下

cd 到安装包的目录

dpkg -i 安装包名字

如果你使用的是red hat linux，然后运行以下命令安装

cd 到安装包的目录
rpm -ivh 安装包名字

----------------------------------






----------------------------linux autoconf/automake 教程--------------------------
http://www.ibm.com/developerworks/cn/linux/l-makefile/

---------------------unix gcc 创建和使用静态库,动态库------------------
http://www.cnblogs.com/dyllove98/archive/2013/06/25/3155599.html

-------------------ubuntu 14.04 装KDE---------------
sudo apt-get install kubuntu-desktop KDE4
http://wiki.ubuntu.org.cn/KDE

-------------------ubuntu 14.04 vim youComplete----------------
http://blog.csdn.net/xiaojun111111/article/details/50970188


------------------linux git 操作 -------------------
克隆工程 git clone https:xxxxxxxxxxxxxxxxxxxxx
查看远端分支 git remote -va
			 git branch -a
			 
创建本地分支并与远端分支关联：git checkout origin/branch_name -b branch_name
提交修改：git commit -a
	git commit -m "注释"
提交到远端：git push
git pull 遇到冲突:
1.先将本地
http://www.01happy.com/git-resolve-conflicts/

创建tar.xz文件：只要先 tar cvf xxx.tar xxx/ 这样创建xxx.tar文件先，然后使用 xz -z xxx.tar 来将 xxx.tar压缩成为 xxx.tar.xz
解压tar.xz文件：先 xz -d xxx.tar.xz 将 xxx.tar.xz解压成 xxx.tar 然后，再用 tar xvf xxx.tar来解包。
.tar.gz     格式解压为          tar   -zxvf   xx.tar.gz
.tar.bz2   格式解压为          tar   -jxvf    xx.tar.bz2
解压到指定目录: -C 

-------------------ubuntu 源码安装lua5.1.5-----------
http://blog.csdn.net/yanggd1987/article/details/46681687 教程为centos环境
1.下载lua源码
2.安装lua依赖库
	sudo apt-get install libreadline6-dev
3.check
		make linux test
		make install
		// 错误
		/usr/bin/ld: cannot find -lncurses
		collect2: error: ld returned 1 exit status
		//解决 sudo apt-get install libncurses5-dev
4.安装lua模块管理工具 luarocks
wget http://luarocks.org/releases/luarocks-2.2.1.tar.gz  
tar zxpf luarocks-2.2.1.tar.gz  
cd luarocks-2.2.1  
./configure  
如果说找不到lua.h头文件
./configure --with-lua=/usr/local --with-lua-include=/usr/local/include  
make bootstrap  
5.从github上拉 luafilesystem 下来
git clone https://github.com/keplerproject/luafilesystem.git
 luarocks install luafilesystem
6.会在/usr/local/lib/lua/5.1/下生成一个lfs.so的文件，就可以引用该库，调用其中的函数。

---------------------------ubuntu 源码安装mongoDB-------------------------

1.下载源码：
https://github.com/mongodb/mongo/tree/v2.4 git clone 下来后切换到对应版本的分支
2.安装scons 
  下载 scons源码 scons-2.2.0.tar.gz
  解压 tar -zxvf scons-2.2.0.tar.gz
  cd scons-2.2.0
  python setup.py install
 3.解压mongodb源码 mongo-2.4.zip
   unzip mongo-2.4.zip
   修改 

https://github.com/mongodb/mongo-cxx-driver/tree/legacy mongodb c++ driver mongdbclient
http://blog.csdn.net/baiwfg2/article/details/38044401 mongdb和mongdbclient安装教程

-----------------------boost 编译不带-fPIC的解决办法-----------
./bjam cxxflags=-fPIC
http://blog.csdn.net/lzshlzsh/article/details/50110771

http://blog.csdn.net/zgl_dm/article/details/8363843  centos编译boost

http://blog.csdn.net/yhm07/article/details/45459139 编译boost ubuntu 
http://blog.csdn.net/u011507599/article/details/50975072 win10 编译boost
可能出现的错误：
1. uintptr_t 未定义 http://blog.csdn.net/cs_zhanyb/article/details/16973379
	include <stdint.h> 解决
2. 出现fatal error: bzlib.h: No such file or directory
	解决： 安装 apt-get install libbz2-dev
			yum install bzip2-devel
3. 	zlib.h：没有那个文件或目录
	解决：sudo apt-get install zlib1g-dev yum install zlib-devel
4. pyconfig.h
	解决: yum install python-devel
-----------------------------------------------------------------------
1.解决 /usr/bin/ld: cannot find -lssl
	sudo apt-get install libssl-dev
2. 解决 /usr/bin/ld: cannot find -ltcmalloc_minimal
  安装TCMalloc 
	http://blog.csdn.net/chen19870707/article/details/40301783
  http://blog.csdn.net/zhuichao001/article/details/8289942
3.安装log4cplus 
	http://blog.csdn.net/astraylinux/article/details/7258835
4.安装tbb
	http://www.tuicool.com/articles/R3uu22
5.安装cxx-driver



------------------------ubuntu 安装最新的cmake------------------
http://blog.csdn.net/u012005313/article/details/50496361


----------------------ubuntu 编译安装mongo_cxx_driver_master  c++11------------------
http://www.cnblogs.com/pluse/p/5491300.html


---------------------cmake -------------------------

set PATH=%PATH%;.... cmake\bin;

cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_INSTALL_PREFIX=.\build_vs -DLIBBSON_DIR=C:\Program Files\libbson\lib  mongo-cxx-driver-master

cmake 编译 libbson 和 mongo-c-driver 
cd mongo-c-driver-$ver
cd src\libbson
cmake -DCMAKE_INSTALL_PREFIX=D:\lib_bson -G "Visual Studio 14 2015 Win64" .
msbuild.exe ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj
cd ..\..
cmake -DCMAKE_INSTALL_PREFIX=D:\lib_mongo_c -DBSON_ROOT_DIR=D:\lib_bson -G "Visual Studio 14 2015 Win64" .
msbuild.exe ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj

cmake 生成mongo_cxx_driver  vs2015的工程
cmake -DLIBBSON_DIR=D:\lib_bson -DBOOST_ROOT=E:\some_int\boost_1_59_0 -DLIBMONGOC_DIR=D:\lib_mongo_c -G "Visual Studio 14 2015 Win64" ..\mongo-cxx-driver-master



---------------visual studio code   ubuntu -----------------




--------------centos 7 安装mysql-----------------
1.rpm -qa | grep MySQL

2.卸载上面三个包
rpm  -e  xxxxx

3. rpm -qa | grep mariadb

4. 删除  yum remove mariadbxxxx

5.CentOS 7的yum源中貌似没有正常安装mysql时的mysql-sever文件，需要去官网上下载
# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
# rpm -ivh mysql-community-release-el7-5.noarch.rpm
# yum install mysql-community-server
成功安装之后重启mysql服务
# service mysqld restart
初次安装mysql是root账户是没有密码的
设置密码的方法
# mysql -uroot
mysql> set password for ‘root’@‘localhost’ = password('root');
mysql> exit

-------centos 编译升级gcc-6.2-----------------
http://www.cnblogs.com/highway-9/p/5628852.html
http://www.cnblogs.com/oloroso/p/5984985.html









	





