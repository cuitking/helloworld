---------------2016-03-22------------------

SSH分客户端openssh-client和openssh-server
如果你只是想登陆别的机器的SSH只需要安装openssh-client（ubuntu有默认安装，如果没有则sudo apt-get install openssh-client），如果要使本机开放SSH服务就需要安装openssh-server
sudo apt-get install openssh-server
然后确认sshserver是否启动了：
ps -e |grep ssh
如果看到sshd那说明ssh-server已经启动了。
如果没有则可以这样启动：sudo /etc/init.d/ssh start
ssh-server配置文件位于/ etc/ssh/sshd_config，在这里可以定义SSH的服务端口，默认端口是22，你可以自己定义成其他端口号，如222。
然后重启SSH服务：
sudo /etc/init.d/ssh stop
sudo /etc/init.d/ssh start

然后使用以下方式登陆SSH：
ssh username@192.168.1.112 username为192.168.1.112 机器上的用户，需要输入密码。
断开连接：exit

在centos7下重启服务不再是 service 服务名称 动作 这样的方式的.而是:

systemctl 动作 服务名.service

1. 查看sshd服务是否启动了.

systemctl status sshd.service

看到的这样的信息就可以确定是启动了.

2. 如果没有启动,则需要启动该服务:

systemctl start sshd.service

3. 如果需要重启sshd服务可使得

systemctl restart sshd.service

4. 设置为开机启动可使用:

systemctl enable sshd.service

生成ssh公钥和私钥
ssh-keygen -t rsa
ssh-keygen -t rsa -C "youremail@example.com"


-------------------------配置eclipse for c++ in linux ubuntu 14.04--------------------------------------

下载jdk，eclipse
在.bashrc中加入
export JAVA_HOME=/usr/local/jdk1.8.0_73
export PATH=$JAVA_HOME/bin:$PATH
export PATH=/usr/local/eclipse:$PATH

alias eclipse='nohup eclipse >/dev/null &'
------------------------------secureCRT  linux 传输文件--------------------------

1.安装 lrzsz  ubuntu : sudo apt-get install lrzsz  centos: yum install lrzsz

2.输入 rz 上传文件
3.输入 sz 使用sz命令。sz加上文件完整路径 下载到secureCRT设置的默认目录

secureCRT设置 session -> properties ->X/Y/Z modem

----------------windows TortoiseGit 的ppk 文件转换成 openssh文件(ubuntu 14.04) ----------------------------------

1. 安装puttygen : sudo apt-get install putty-tools
2. ppk 文件转化 openssh key 
	private key:
	puttygen kk2_git.ppk -0 private-openssh -o id_rsa
	public key:
	puttygen kk2_git.ppk -O public-openssh -o id_rsa.pub
	

------------------------ubuntu 安装scons---------------------------

scons安装和使用

1. scons是神马？
 
scons是linux下的自动构建工具，类似cmake。
 
2. 安装
 
wget http://prdownloads.sourceforge.net/scons/scons-2.2.0.tar.gz .
 
tar zxvf scons-2.2.0.tar.gz
 
cd scons-2.2.0
 
python setup.py install
 
正常情况下，scons将安装到${PYTHON_INSTALL_DIR}/bin/下
 
3. hello world程序
 
三个文件hello.h hello.c main.c hello.h定义函数void hello(); hello.c中实现该函数，main.c中调用该函数。
 
编写SConstruct，scons构建时使用。内容如下：
 
Program('hello', ['hello.c', 'main.c'])
 
开始构建 
 
scons: Reading SConscript files ...
scons: done reading SConscript files.
scons: Building targets ...
gcc -o hello.o -c hello.c
gcc -o main.o -c main.c
gcc -o hello hello.o main.o
scons: done building targets.

---------------------------ubuntu 安装protobuf----------------------------------
http://blog.csdn.net/xocoder/article/details/9155901
ImportError: No module named google.protobuf.internal 解决办法
http://blog.csdn.net/woainiwss/article/details/50585665
./configure CXXFLAGS=-fPIC   64位


--------------------------vs code 配置c++开发环境 ubuntu------------------------------
https://www.zhihu.com/question/30037013

-------------------------------



linux系统下怎么安装.deb文件？

deb 是 ubuntu 、debian 的格式。
rpm 是 redhat 、fedora 、suse 的格式。

他们不通用（虽然可以转换一下）。

deb是debian发行版的软件包
ubuntu是基于debian 发行的 所有可以用

.deb是solaris系统下的安装包后缀名。安装方法如下

cd 到安装包的目录

dpkg -i 安装包名字

如果你使用的是red hat linux，然后运行以下命令安装

cd 到安装包的目录
rpm -ivh 安装包名字

----------------------------------






----------------------------linux autoconf/automake 教程--------------------------
http://www.ibm.com/developerworks/cn/linux/l-makefile/

---------------------unix gcc 创建和使用静态库,动态库------------------
http://www.cnblogs.com/dyllove98/archive/2013/06/25/3155599.html

-------------------ubuntu 14.04 装KDE---------------
sudo apt-get install kubuntu-desktop KDE4
http://wiki.ubuntu.org.cn/KDE

-------------------ubuntu 14.04 vim youComplete----------------
http://blog.csdn.net/xiaojun111111/article/details/50970188


------------------linux git 操作 -------------------
克隆工程 git clone https:xxxxxxxxxxxxxxxxxxxxx
查看远端分支 git remote -va
			 git branch -a
			 
创建本地分支并与远端分支关联：git checkout origin/branch_name -b branch_name
提交修改：git commit -a
	git commit -m "注释"
提交到远端：git push
git pull 遇到冲突:
1.先将本地
http://www.01happy.com/git-resolve-conflicts/

创建tar.xz文件：只要先 tar cvf xxx.tar xxx/ 这样创建xxx.tar文件先，然后使用 xz -z xxx.tar 来将 xxx.tar压缩成为 xxx.tar.xz
解压tar.xz文件：先 xz -d xxx.tar.xz 将 xxx.tar.xz解压成 xxx.tar 然后，再用 tar xvf xxx.tar来解包。
.tar.gz     格式解压为          tar   -zxvf   xx.tar.gz
.tar.bz2   格式解压为          tar   -jxvf    xx.tar.bz2
解压到指定目录: -C 

---创建压缩文件
tar -czvf homebackup.tar.gz /home
---解压.gz文件
tar -xzvf homebackup.tar.gz -C /home/new

-------------------ubuntu 源码安装lua5.1.5-----------
http://blog.csdn.net/yanggd1987/article/details/46681687 教程为centos环境
1.下载lua源码
2.安装lua依赖库
	sudo apt-get install libreadline6-dev
3.check
		make linux test
		make install
		// 错误
		/usr/bin/ld: cannot find -lncurses
		collect2: error: ld returned 1 exit status
		//解决 sudo apt-get install libncurses5-dev
4.安装lua模块管理工具 luarocks
wget http://luarocks.org/releases/luarocks-2.2.1.tar.gz  
tar zxpf luarocks-2.2.1.tar.gz  
cd luarocks-2.2.1  
./configure  
如果说找不到lua.h头文件
./configure --with-lua=/usr/local --with-lua-include=/usr/local/include  
make bootstrap  
5.从github上拉 luafilesystem 下来
git clone https://github.com/keplerproject/luafilesystem.git
 luarocks install luafilesystem
6.会在/usr/local/lib/lua/5.1/下生成一个lfs.so的文件，就可以引用该库，调用其中的函数。

---------------------------ubuntu 源码安装mongoDB-------------------------

1.下载源码：
https://github.com/mongodb/mongo/tree/v2.4 git clone 下来后切换到对应版本的分支
2.安装scons 
  下载 scons源码 scons-2.2.0.tar.gz
  解压 tar -zxvf scons-2.2.0.tar.gz
  cd scons-2.2.0
  python setup.py install
 3.解压mongodb源码 mongo-2.4.zip
   unzip mongo-2.4.zip
   修改 

https://github.com/mongodb/mongo-cxx-driver/tree/legacy mongodb c++ driver mongdbclient
http://blog.csdn.net/baiwfg2/article/details/38044401 mongdb和mongdbclient安装教程

-----------------------boost 编译不带-fPIC的解决办法-----------
./bjam cxxflags=-fPIC
http://blog.csdn.net/lzshlzsh/article/details/50110771

http://blog.csdn.net/zgl_dm/article/details/8363843  centos编译boost

http://blog.csdn.net/yhm07/article/details/45459139 编译boost ubuntu 
http://blog.csdn.net/u011507599/article/details/50975072 win10 编译boost
可能出现的错误：
1. uintptr_t 未定义 http://blog.csdn.net/cs_zhanyb/article/details/16973379
	include <stdint.h> 解决
2. 出现fatal error: bzlib.h: No such file or directory
	解决： 安装 apt-get install libbz2-dev
			yum install bzip2-devel
3. 	zlib.h：没有那个文件或目录
	解决：sudo apt-get install zlib1g-dev yum install zlib-devel
4. pyconfig.h
	解决: yum install python-devel
-----------------------------------------------------------------------
1.解决 /usr/bin/ld: cannot find -lssl
	sudo apt-get install libssl-dev
2. 解决 /usr/bin/ld: cannot find -ltcmalloc_minimal
  安装TCMalloc 
	http://blog.csdn.net/chen19870707/article/details/40301783
  http://blog.csdn.net/zhuichao001/article/details/8289942
3.安装log4cplus 
	http://blog.csdn.net/astraylinux/article/details/7258835
4.安装tbb
	http://www.tuicool.com/articles/R3uu22
5.安装cxx-driver



------------------------ubuntu 安装最新的cmake------------------
http://blog.csdn.net/u012005313/article/details/50496361


----------------------ubuntu 编译安装mongo_cxx_driver_master  c++11------------------
http://www.cnblogs.com/pluse/p/5491300.html


---------------------cmake -------------------------

set PATH=%PATH%;.... cmake\bin;

cmake -G "Visual Studio 14 2015 Win64" -DCMAKE_INSTALL_PREFIX=.\build_vs -DLIBBSON_DIR=C:\Program Files\libbson\lib  mongo-cxx-driver-master

cmake 编译 libbson 和 mongo-c-driver 
cd mongo-c-driver-$ver
cd src\libbson
cmake -DCMAKE_INSTALL_PREFIX=D:\lib_bson -G "Visual Studio 14 2015 Win64" .
msbuild.exe ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj
cd ..\..
cmake -DCMAKE_INSTALL_PREFIX=D:\lib_mongo_c -DBSON_ROOT_DIR=D:\lib_bson -G "Visual Studio 14 2015 Win64" .
msbuild.exe ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj

cmake 生成mongo_cxx_driver  vs2015的工程
cmake -DLIBBSON_DIR=D:\lib_bson -DBOOST_ROOT=E:\some_int\boost_1_59_0 -DLIBMONGOC_DIR=D:\lib_mongo_c -G "Visual Studio 14 2015 Win64" ..\mongo-cxx-driver-master



---------------visual studio code   ubuntu -----------------




--------------centos 7 安装mysql-----------------
1.rpm -qa | grep MySQL

2.卸载上面三个包
rpm  -e  xxxxx

3. rpm -qa | grep mariadb

4. 删除  yum remove mariadbxxxx

5.CentOS 7的yum源中貌似没有正常安装mysql时的mysql-sever文件，需要去官网上下载
# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
# rpm -ivh mysql-community-release-el7-5.noarch.rpm
# yum install mysql-community-server
成功安装之后重启mysql服务
# service mysqld restart
初次安装mysql是root账户是没有密码的
设置密码的方法
# mysql -uroot
mysql> set password for ‘root’@‘localhost’ = password('root');
mysql> exit

-------centos 编译升级gcc-6.2-----------------
http://www.cnblogs.com/highway-9/p/5628852.html
http://www.cnblogs.com/oloroso/p/5984985.html


-----

第一步 让内网映射机能无密码登陆到外网机上。

第二步 在主机的ssd_config中设置： GatewayPorts yes
ssh -fNT -g -R 6888:localhost:10000 106.75.7.48

注意：一个比较隐秘，小众的设置GatewayPorts，默认sshd_config 里面是 No 的,  
不设置这个， 只能 telnet localhost  (telnet 127.0.0.1)

ssh -fNT -R 9999:localhost:10000 106.75.8.87

nohup ssh -fNT -R 6999:localhost:6999  180.150.179.208 &


nohup ssh -fNT -R 6999:localhost:6999  180.150.179.208 &


------源码下载编译nginx
yum -y install pcre-devel zlib-devel openssl-devel
cd /tmp
wget http://nginx.org/download/nginx-1.11.3.tar.gz
tar zxf nginx-1.11.3.tar.gz 
cd nginx-1.11.3
./configure --sbin-path=/usr/bin --conf-path=/etc/nginx/nginx.conf --pid-path=/var/local/nginx/nginx.pid --with-http_ssl_module --with-pcre
make
make install

----nginx操作------
启动：nginx   -c /etc/nginx/nginx.conf
nginx的停止  : nginx -s stop 
				nginx -s quit
nginx重载配置: nginx -s reload


---------shell  字符串处理-------------
http://qjpcpu.github.io/blog/2014/02/14/shellzi-fu-chuan-chu-li/


----------修改单进程最大链接数---------
1 vi /etc/security/limits.conf，添加如下的行:

*   soft noproc   11000  
*   hard noproc   11000  
*   soft nofile   4100  
*   hard nofile   4100 
若设置不生效，查看包含的目录下的配置文件是否覆盖，如/etc/security/limits.d/下的文件是否覆盖了/etc/security/limits.conf设置的值 
如果想让修改永久生效，则需要修改配置文件，如 .bash_profile、/etc/profile或/etc/security/limits.conf
 
2. ulimit -n ****    ***为修改的链接数

https://www.cnblogs.com/derekchen/archive/2012/04/13/2445516.html

设置ulimit -n值为4096
echo 'ulimit -n 4096' >> /etc/profile
source /etc/profile

---------centos 7 关闭防火墙--------
1、关闭防火墙：sudo systemctl stop firewalld.service
2、关闭开机启动：sudo systemctl disable firewalld.service
3、安装iptables防火墙
执行以下命令安装iptables防火墙：sudo yum install iptables-services
4、配置iptables防火墙，打开指定端口（具体跟以前版本一样，网上介绍很多，这里不多介绍了）
5. 设置iptables防火墙开机启动：sudo systemctl enable iptables

-----开启防火墙端口------
firewall-cmd --zone=public --add-port=8191/tcp --permanent
firewall-cmd --reload
https://www.cnblogs.com/moxiaoan/p/5683743.html

-------------------------------------
# uname -a   # 查看内核/操作系统/CPU信息 
# cat /etc/issue 
# cat /etc/redhat-release # 查看操作系统版本 
# cat /proc/cpuinfo  # 查看CPU信息 
# grep MemTotal /proc/meminfo # 查看内存总量
# hostname   # 查看计算机名 
# lspci -tv   # 列出所有PCI设备 
# lsusb -tv   # 列出所有USB设备 
# lsmod    # 列出加载的内核模块 
# env    # 查看环境变量

---------
安装Connector/Python：

# wget http://cdn.MySQL.com/Downloads/Connector-Python/mysql-connector-python-1.0.11.zip
# unzip mysql-connector-python-1.0.11.zip
# cd mysql-connector-python-1.0.11 
# python setup.py install

测试Connector/Python是否装上：

>>> from distutils.sysconfig import get_python_lib
>>> print get_python_lib()
/usr/local/lib/python2.7/site-packages


----------------
解决无法找到 /usr/bin/ld: cannot find -ldl
使用源码编译glibc
http://www.sysnote.org/2015/08/25/use-new-glibc/

解决无法找到 /usr/bin/ld: cannot find -lstdc++
yum install libstdc++-static


--------------
question：ImportError: No module named requests
down vote
It's not obvious to me which version of Python you are using.
If it's Python 3, a solution would be pip3 install requests

配置centos网络
打开/etc/sysconfig/network-scripts

TYPE="Ethernet"
BOOTPROTO="none"
DEFROUTE="yes"
IPV4_FAILURE_FATAL="no"
IPV6INIT=yes
IPV6_AUTOCONF="yes"
IPV6_DEFROUTE="yes"
IPV6_FAILURE_FATAL="no"
NAME="enp0s3"
UUID=6885963f-5e92-4780-ae8e-0370fc1f2d71
DEVICE="enp0s3"
ONBOOT="yes"
IPADDR="192.168.5.248"
PREFIX="24"
GATEWAY="192.168.5.1"
DNS1="192.168.5.1"
IPV6_PEERDNS="yes"
IPV6_PEERROUTES="yes"
IPV6_PRIVACY="no"
安装centos7时，选择了minimal install的话，没有安装网络组件。ifconfig command not find   yum install net-tools   可以解决问题
没有killall  yum install psmisc 
centos7 安装c++，yum install gcc-c++


------ubuntu 设置静态ip上网
编辑interfaces文件，该文件位于/etc/network/下，执行如下命令：
vim /etc/network/interfaces

# The primary network interface
auto eth0
iface eth0 inet static
address 192.168.1.100
netmask 255.255.255.0
gateway 192.168.1.1

vim /etc/resolvconf/resolv.conf.d/base
nameserver 192.168.1.1
nameserver 61.138.2.69

-------
tcpdump是linux命令行下常用的的一个抓包工具，记录一下平时常用的方式，测试机器系统是ubuntu 12.04。

tcpdump的命令格式

tcpdump的参数众多，通过man tcpdump可以查看tcpdump的详细说明，这边只列一些笔者自己常用的参数：

tcpdump [-i 网卡] -nnAX '表达式'
各参数说明如下：

-i：interface 监听的网卡。
-nn：表示以ip和port的方式显示来源主机和目的主机，而不是用主机名和服务。
-A：以ascii的方式显示数据包，抓取web数据时很有用。
-X：数据包将会以16进制和ascii的方式显示。
表达式：表达式有很多种，常见的有：host 主机；port 端口；src host 发包主机；dst host 收包主机。多个条件可以用and、or组合，取反可以使用!，更多的使用可以查看man 7 pcap-filter。
下面进行一些命令测试，如果没有权限，可以先切换成root用户。

监听网卡eth0

$ tcpdump -i eth0
这个方式最简单了，但是用处不多，因为基本上只能看到数据包的信息刷屏，压根看不清，可以使用ctrl+c中断退出，如果真有需求，可以将输出内容重定向到一个文件，这样也更方便查看。

监听指定协议的数据

$ tcpdump -i eth0 -nn 'icmp'

linux使用tcpdump抓包示例

每一行的各个数据表示的含义：

抓到包的时间 IP 发包的主机和端口 > 接收的主机和端口 数据包内容
监听指定的主机

$ tcpdump -i eth0 -nn 'host 192.168.1.231'
这样的话，192.168.1.231这台主机接收到的包和发送的包都会被抓取。

$ tcpdump -i eth0 -nn 'src host 192.168.1.231'
这样只有192.168.1.231这台主机发送的包才会被抓取。

$ tcpdump -i eth0 -nn 'dst host 192.168.1.231'
这样只有192.168.1.231这台主机接收到的包才会被抓取。

监听指定端口

$ tcpdump -i eth0 -nnA 'port 80'
上例是用来监听主机的80端口收到和发送的所有数据包，结合-A参数，在web开发中，真是非常有用。

监听指定主机和端口

$ tcpdump -i eth0 -nnA 'port 80 and src host 192.168.1.231'
多个条件可以用and，or连接。上例表示监听192.168.1.231主机通过80端口发送的数据包。

监听除某个端口外的其它端口

$ tcpdump -i eth0 -nnA '!port 22'
如果需要排除某个端口或者主机，可以使用“!”符号，上例表示监听非22端口的数据包




------centos 7 firewalld 设置------------
http://blog.csdn.net/xlgen157387/article/details/52672988

-----skynet 编译需要的第三方库----
mac osx

brew install readline autoconf
centos

yum install -y readline-devel autoconf
ubuntu
apt-get install readline-dev autoconf
apt-get install libreadline-dev autoconf  (for ubuntu 16.04)

-------------------------------------------------
Transmission是一款跨平台的BT/PT下载工具，具体我们不再赘述，直接进入安装部分。
本次安装使用编译安装。

先来默默安装一下编译需要的环境
yum -y groupinstall "Development Tools"
yum -y install m4 libtool gettext libcurl-devel psmisc libevent-devel intltool gtk3-devel openssl-devel
然后我们下载包，开始编译
wget https://github.com/transmission/transmission-releases/raw/master/transmission-2.92.tar.xz
tar -xf transmission-2.92.tar.xz
cd transmission-2.92
./configure
make
make install
当然了，编译过程中你可以能会遇到各种各样的玄学问题，这就要靠你自己去解决了。

查看当前Transmission版本（查看是否安装成功）
transmission-daemon -V
初始化程序
transmission-daemon -g /usr/local/transmission
killall transmission-daemon
配置具体参数
vim /usr/local/transmission/settings.json
相关配置内容
"rpc-authentication-required": true,      #开启认证登录
"rpc-password": "密码",                   #直接修改，保存后会自动加密
"rpc-username": "账号",                   #管理员账号
"rpc-port": 9091,                         #管理登录端口，最好修改
"rpc-whitelist-enabled": false,           #关闭白名单，所有IP都能登录
加载新的配置并运行
transmission-daemon -g /usr/local/transmission
安装Web UI管理程序
wget https://github.com/ronggang/transmission-web-control/raw/master/release/tr-control-easy-install.sh
sh tr-control-easy-install.sh
然后你就可以在浏览器打开[ip]:[port]，尽情使用Transmission了～
参考：http://www.hndzz.cn/post/2040.html


外网serverlist
http://verjyqp.jyhd666.com:4321/svrlist.txt?edition=jyqp&clientver=0.0.12.100000&platform=1&channel=2



Beyond Compare 4 你的30天评估期已结束
找到beyond Compare 4文件夹下面的BCUnrar.dll，将其删掉或者重命名，再重新打开接着使用

1、安装MariaDB

安装命令

yum -y install mariadb mariadb-server
安装完成MariaDB，首先启动MariaDB

systemctl start mariadb
设置开机启动

systemctl enable mariadb
接下来进行MariaDB的相关简单配置

mysql_secure_installation
首先是设置密码，会提示先输入密码

Enter current password for root (enter for none):<–初次运行直接回车

设置密码

Set root password? [Y/n] <– 是否设置root用户密码，输入y并回车或直接回车
New password: <– 设置root用户的密码
Re-enter new password: <– 再输入一次你设置的密码

其他配置

Remove anonymous users? [Y/n] <– 是否删除匿名用户，回车

Disallow root login remotely? [Y/n] <–是否禁止root远程登录,回车,

Remove test database and access to it? [Y/n] <– 是否删除test数据库，回车

Reload privilege tables now? [Y/n] <– 是否重新加载权限表，回车

初始化MariaDB完成，接下来测试登录

mysql -uroot -ppassword
完成。

 

2、配置MariaDB的字符集

文件/etc/my.cnf

vi /etc/my.cnf
在[mysqld]标签下添加

init_connect='SET collation_connection = utf8_unicode_ci' 
init_connect='SET NAMES utf8' 
character-set-server=utf8 
collation-server=utf8_unicode_ci 
skip-character-set-client-handshake
文件/etc/my.cnf.d/client.cnf

vi /etc/my.cnf.d/client.cnf
在[client]中添加

default-character-set=utf8
文件/etc/my.cnf.d/mysql-clients.cnf

vi /etc/my.cnf.d/mysql-clients.cnf
在[mysql]中添加

default-character-set=utf8
 全部配置完成，重启mariadb

systemctl restart mariadb
之后进入MariaDB查看字符集

mysql> show variables like "%character%";show variables like "%collation%";
显示为


+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client    | utf8                      |
| character_set_connection | utf8                      |
| character_set_database  | utf8                      |
| character_set_filesystem | binary                    |
| character_set_results    | utf8                      |
| character_set_server    | utf8                      |
| character_set_system    | utf8                      |
| character_sets_dir      | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)

+----------------------+-----------------+
| Variable_name        | Value          |
+----------------------+-----------------+
| collation_connection | utf8_unicode_ci |
| collation_database  | utf8_unicode_ci |
| collation_server    | utf8_unicode_ci |
+----------------------+-----------------+
3 rows in set (0.00 sec)

字符集配置完成。

 

3、添加用户，设置权限

创建用户命令

mysql>create user username@localhost identified by 'password';
直接创建用户并授权的命令

mysql>grant all on *.* to username@localhost indentified by 'password';
授予外网登陆权限 

mysql>grant all privileges on *.* to username@'%' identified by 'password';
授予权限并且可以授权

mysql>grant all privileges on *.* to username@'hostname' identified by 'password' with grant option;
简单的用户和权限配置基本就这样了。

其中只授予部分权限把 其中 all privileges或者all改为select,insert,update,delete,create,drop,index,alter,grant,references,reload,shutdown,process,file其中一部分。


-----centos 安装 mariadb-----
https://www.cnblogs.com/river2005/p/6813618.html
https://www.linuxidc.com/Linux/2018-03/151403.htm  111


chgrp -R mysql /data/mysqldb && chown -R mysql /data/mysqldb

/usr/bin/mysqld_safe_helper: Can't create/write to file '/data/mysql/bogon.err' (Errcode: 13 "Permission denied")
 

    害苦了我，多方查找才发selinx开启这呢，果断禁用，然后重启操作系统：OK！！！
	vim /etc/sysconfig/selinux

    SELINUX=disabled


------go land 激活服务器收集---------
http://idea.youbbs.org

----linux去重打印
last -f /var/log/wtmp | awk '{print $3}' | sort -n | uniq -c

----linux 复制不提示 覆盖
在cp前加上一个"\"符号就不使用别名运行了，如下：
# \cp -f sourcefile targetdir 

skynet lua简单加密

https://blog.csdn.net/mycwq/article/details/47406337

linux 时钟处理机制
https://www.ibm.com/developerworks/cn/linux/l-cn-clocks/

skynet 文档
https://blog.csdn.net/qq769651718/article/category/7480207



https://www.vpsao.com/hub/clientarea.php?action=productdetails&id=1590

Pornhub

vpsAO
AO967895

Hostname:factcat.com  ROOT pwd:bc65e8c328


-----centos7 (CentOS7)共享文件夹找不到怎么办
https://blog.csdn.net/JasonHector/article/details/78679135
重新挂载共享文件夹
sudo vmhgfs-fuse .host:/shared /mnt/hgfs
注意格式 shared 为分享的文件名 .host前面有个空格

-------linux 的iptables备份及firewalld操作介绍------
http://blog.51cto.com/taoxie/2046569

-------linux 系统之间互传文件----------
1.文件复制：本机->远程服务器：
scp /home/shaoxiaohu/test1.txt shaoxiaohu@172.16.18.1:/home/test2.txt
    其中，test1为源文件，test2为目标文件，shaoxiaohu@172.16.18.1为远程服务器的用户名和ip地址。
2.文件复制：远程服务器->本机
scp shaoxiaohu@172.16.18.2:/home/test2.txt /home/shaoxiaohu/test1.txt
       其中，haoxiaohu@172.16.18.2为远程服务器的用户名和ip地址， test2为源文件，test1为目标路径
3.文件夹复制
    在scp命令后加“-r”参数即可。
4. 端口号
    如果端口号有更改，需在scp 后输入：-P 端口号 （注意是大写，ssh的命令中 -p是小写）。


几种方法来实现scp拷贝时无需输入密码
https://blog.csdn.net/nfer_zhuang/article/details/42646849
--------------------------------------
dos2unix  yum install dos2unix

----启动redis-server-----------
redis-server /usr/local/redis/etc/redis.conf > run-2018-12-13.log 2>&1 &   //将运行日志保存在 run-2018-12-13.log 中

---查看文件夹大小
du -h ./xxx

---查看文件夹挂载的位置
1.df 文件夹路径
2.mount -l
3.查看/etc/mtab文件

---查看centos内存----
1.top
2. free -h,m
3. 统计所有进程的内存占用情况 
ps aux | awk '{mem += $6} END {print mem/1024}'

----查看进程打开文件数--------
lsof -p pid | wc -l

----修改time_wait连接数过多的问题-----
http://ju.outofmemory.cn/entry/199313
sysctl -w net.ipv4.tcp_timestamps=1  
//开启对于TCP时间戳的支持,若该项设置为0，则下面一项设置不起作用
sysctl -w net.ipv4.tcp_tw_recycle=1  
//表示开启TCP连接中TIME-WAIT sockets的快速回收

----SYN flooding处理----
https://blog.51cto.com/xujpxm/1846095
# vim /etc/sysctl.conf 
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_max_syn_backlog = 2048
保存退出后，执行：
# sysctl -p
参数说明如下：
net.ipv4.tcp_syncookies = 1
#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；
net.ipv4.tcp_tw_reuse = 1
#表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；为1，开启；
net.ipv4.tcp_tw_recycle = 1
#表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭；为1，开启；
net.ipv4.tcp_fin_timeout
#修改系統默认的 TIMEOUT 时间，这里根据服务器的实际情况设置。

net.core.somaxconn = 128

---查看linux内核配置---
sysctl -a | grep net.ipv4

---查看系统开机信息----
dmesg -t 

----在终端ssh的断开方法---
在终端断开ssh连接而不关闭终端的方法
1.Ctrl + D
2.输入 logout

centos 7 安装 apache bench 
yum install hpptd-tools


redis Can’t save in background: fork: Cannot allocate memory 解决及原理
https://blog.csdn.net/zqz_zqz/article/details/53384854

彻底的解决方式
编辑文件 /etc/sysctl.conf 添加：
vm.overcommit_memory=1
执行sysctl -p使其生效；























